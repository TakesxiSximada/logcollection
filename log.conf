# -*- coding: utf-8 -*-
[loggers]
keys = root

[handlers]
keys = console, null, file, watchfile, rotatingfile, timerotatingfile, syslog, fluent, slack

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = slack

[handler_null]
class = logging.NullHandler
args = ()
level = DEBUG
formatter = generic
propagate = 0

[handler_console]
class = logging.StreamHandler
args = (sys.stderr,)
level = DEBUG
formatter = generic
propagate = 0

[handler_file]
class = logging.FileHandler
args = ('var/log/file_handler.log', 'a', 'utf8', True)
level = DEBUG
formatter = generic

[handler_watchfile]
class = logging.handlers.WatchedFileHandler
args = ('var/log/watched_file_handler.log', 'a', 'utf8', True)
level = DEBUG
formatter = generic

[handler_rotatingfile]
class = logging.handlers.RotatingFileHandler
args = ('var/log/rotating_file_handler.log', 'a', 0, 2, 'utf8', 1)
level = INFO
target = console
formatter = generic

[handler_timerotatingfile]
level = INFO
formatter = generic
class = logging.handlers.TimedRotatingFileHandler
args = ('var/log/time_rotating_file_handler.log', 'M', 1, 0, 'utf8', 0, 0, 0)

[handler_syslog]
level = INFO
formatter = generic
class = logging.handlers.SysLogHandler
args = ()

[handler_fluent]
level = INFO
formatter = generic
class = fluent.handler.FluentHandler
args = ('logcollection', 'localhost', 24224)

[handler_slack]
level = INFO
formatter = generic
class = logginglazy.SlackLogHandler
args = ('INCOMMING WEB HOOK URL',)

[handler_hipchat]
level = INFO
formatter = generic
class = logginglazy.HipchatLogHandler
args = ('INCOMMING WEB HOOK URL',)

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s


# logging.handlers.SMTPHandler
# logging.handlers.DatagramHandler
# logging.handlers.HTTPHandler
# logging.handlers.MemoryHandler
# logging.handlers.SocketHandler
# logging.handlers.NTEventLogHandler
# logging.handlers.SysLogHandler
# logging.handlers.QueueHandler
# logging.handlers.TimedRotatingFileHandler
# logging.handlers.QueueListener